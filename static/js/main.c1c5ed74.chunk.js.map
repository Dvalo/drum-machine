{"version":3,"sources":["components/DrumPadKey.js","components/DrumPad.js","components/drumKeysArray.js","App.js","reportWebVitals.js","index.js"],"names":["DrumPadKey","props","audioHandler","React","createRef","activateDrumPad","bind","onKeyDown","keyPad","this","current","currentTime","volume","playVolume","play","updateDisplay","drumKeyId","event","power","keyCode","drumKeyCode","className","onClick","id","document","addEventListener","drumKeyTrigger","src","drumKeyUrl","ref","Component","DrumPad","padBase","currentDrumArr","map","currentDrum","i","keyTrigger","url","drumArray","App","state","drumArr","displayName","changeVolume","handlePower","name","setState","e","target","value","Math","round","type","min","max","onChange","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c1c5ed74.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass DrumPadKey extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.audioHandler = React.createRef();\r\n        this.activateDrumPad = this.activateDrumPad.bind(this);\r\n        this.onKeyDown = this.onKeyDown.bind(this);\r\n    }\r\n    activateDrumPad() {\r\n        const keyPad = this.audioHandler.current;\r\n        keyPad.currentTime = 0;\r\n        keyPad.volume = this.props.playVolume;\r\n        keyPad.play();\r\n        this.props.updateDisplay(this.props.drumKeyId);\r\n    }\r\n    onKeyDown(event) {\r\n        if(this.props.power) {\r\n            if (event.keyCode === this.props.drumKeyCode) {\r\n                this.activateDrumPad();\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n        <div\r\n            className=\"drum-pad\"\r\n            onClick={this.activateDrumPad}\r\n            id={this.props.drumKeyId}\r\n            onKeyDown={document.addEventListener(\"keydown\", this.onKeyDown)}>\r\n            <audio\r\n            className=\"clip\"\r\n            id={this.props.drumKeyTrigger}\r\n            src={this.props.drumKeyUrl}\r\n            ref={this.audioHandler}></audio>\r\n            {this.props.drumKeyTrigger}\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DrumPadKey;","import React from 'react';\r\nimport DrumPadKey from './DrumPadKey';\r\n\r\nclass DrumPad extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let padBase = this.props.currentDrumArr.map((currentDrum, i) => {\r\n        return (\r\n            <DrumPadKey\r\n            drumKeyCode={currentDrum.keyCode}\r\n            drumKeyTrigger={currentDrum.keyTrigger}\r\n            drumKeyId={currentDrum.id}\r\n            drumKeyUrl={currentDrum.url}\r\n            updateDisplay={this.props.updateDisplay}\r\n            playVolume={this.props.playVolume}\r\n            power={this.props.power}/>\r\n        );\r\n        });\r\n\r\n        return (\r\n        <div\r\n            id=\"drum-base\"\r\n            className={this.props.power ? \"power-on\" : \"power-off\"}>\r\n            {padBase}\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default DrumPad;","export const drumArray = [\r\n    {\r\n        keyCode: 81,\r\n        keyTrigger: \"Q\",\r\n        id: \"Heater-1\",\r\n        url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3\",\r\n    },\r\n    {\r\n        keyCode: 87,\r\n        keyTrigger: \"W\",\r\n        id: \"Heater-2\",\r\n        url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3\",\r\n    },\r\n    {\r\n        keyCode: 69,\r\n        keyTrigger: \"E\",\r\n        id: \"Heater-3\",\r\n        url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3\",\r\n    },\r\n    {\r\n        keyCode: 65,\r\n        keyTrigger: \"A\",\r\n        id: \"Heater-4\",\r\n        url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3\",\r\n    },\r\n    {\r\n        keyCode: 83,\r\n        keyTrigger: \"S\",\r\n        id: \"Clap\",\r\n        url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3\",\r\n    },\r\n    {\r\n        keyCode: 68,\r\n        keyTrigger: \"D\",\r\n        id: \"Open-HH\",\r\n        url: \"https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3\",\r\n    },\r\n    {\r\n        keyCode: 90,\r\n        keyTrigger: \"Z\",\r\n        id: \"Kick-n'-Hat\",\r\n        url: \"https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3\",\r\n    },\r\n    {\r\n        keyCode: 88,\r\n        keyTrigger: \"X\",\r\n        id: \"Kick\",\r\n        url: \"https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3\",\r\n    },\r\n    {\r\n        keyCode: 67,\r\n        keyTrigger: \"C\",\r\n        id: \"Closed-HH\",\r\n        url: \"https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3\",\r\n    },\r\n];\r\n","import React from 'react';\nimport DrumPad from './components/DrumPad';\nimport {drumArray} from './components/drumKeysArray';\nimport '@fortawesome/fontawesome-free/js/all.js';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      drumArr: drumArray,\n      displayName: \"Click pads for sound\",\n      volume: 0.5,\n      power: false,\n    };\n    this.updateDisplay = this.updateDisplay.bind(this);\n    this.changeVolume = this.changeVolume.bind(this);\n    this.handlePower = this.handlePower.bind(this);\n  }\n  updateDisplay(name) {\n    this.setState({\n      displayName: name,\n    });\n  }\n\n  changeVolume(e) {\n    this.setState({\n      volume: e.target.value / 100,\n    });\n  }\n\n  handlePower() {\n    this.setState({\n      power: !this.state.power,\n    });\n  }\n\n  render() {\n    return (\n      <div id=\"drum-machine\">\n        <DrumPad\n          currentDrumArr = {this.state.drumArr}\n          updateDisplay = {this.updateDisplay}\n          playVolume = {this.state.volume}\n          power = {this.state.power}/>\n        <div\n          className={\"right-wrapper \" + (this.state.power ? \"power-on\" : \"power-off\")}>\n          <div className=\"display-tab\" id=\"display\">\n            {this.state.displayName}\n          </div>\n          <div className=\"display-tab\" id=\"sound-display\">\n            Volume: {Math.round(this.state.volume * 100)}\n          </div>\n          <input\n            type=\"range\"\n            id=\"volumeSlider\"\n            min=\"0\"\n            max=\"100\"\n            value={this.state.volume * 100}\n            onChange={this.changeVolume}></input>\n          <div\n            className={\"power-tab \" + (this.state.power ? \"power-on\" : \"power-off\")}\n            id=\"power-btn\"onClick={this.handlePower}>\n            <i className=\"fas fa-power-off\"></i>\n          </div>\n          <div className=\"info\">\n            <p>freeCodeCamp Project</p>\n            <p>\n              <a href=\"#\">Drum Machine</a>\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}